import matplotlib.pyplot as plt
import numpy as np

# Ursprünglicher vollständiger Datensatz mit f1, prec und rec
data = {
    'A1': {
        'f1': [0.9655,0.9655,0.9286,0.6957,0.1250,0,0,0,0,0],
        'prec': [1.0000, 1.0000,1.0000,1.0000,1.0000,0,0,0,0,0],
        'rec': [0.9333,0.9333,0.8667,0.5333,0.0667,0,0,0,0,0]
    },
    'A3': {
        'f1': [0.9375,0.9375,0.9677,0.9375,0.8000,0,0,0,0,0],
        'prec': [0.8824,0.8824,0.9375,0.8824,1.0000,0,0,0,0,0],
        'rec': [1.0000,1.0000, 1.0000,1.0000,0.6667,0,0,0,0,0]
    },
    'A5': {
        'f1': [0.6122,0.6122,0.7317,0.9091,0.5714,0,0,0,0,0],
        'prec': [0.4412,0.4412,0.5769,0.8333,1.0000,0,0,0,0,0],
        'rec': [1,1,1,1,0.4000,0,0,0,0,0]
    },
    'A7': {
        'f1': [0.7500, 0.7500,0.6957,0.5714,0.3333,0,0,0,0,0],
        'prec': [1.0000,1.0000,1.0000,1.0000,1.0000,0,0,0,0,0],
        'rec': [0.6000,0.6000,0.5333,0.4000,0.2000,0,0,0,0,0]
    },
    'A9': {
        'f1': [0.5806,0.5806,0.2727,0.1905,0,0,0,0,0,0],
        'prec': [0.5625,0.5625,0.4286,0.3333,0,0,0,0,0,0],
        'rec': [0.6000, 0.6000,0.2000,0.1333,0,0,0,0,0,0]
    },
    'C1': {
        'f1': [0.5714,0.5714, 0.4211,0.3333,0,0,0,0,0,0],
        'prec': [1.0000,1.0000,1.0000,1.0000,0,0,0,0,0,0],
        'rec': [ 0.4000,0.4000,0.2667,0.2000,0,0,0,0,0,0]
    },
    'C3': {
        'f1': [1.0000,1.0000,1.0000,1.0000,0.8000,0,0,0,0,0],
        'prec': [1.0000,1.0000,1.0000,1.0000,1.0000,0,0,0,0,0],
        'rec': [1.0000,1.0000,1.0000,1.0000,0.6667,0,0,0,0,0]
    },
    'C5': {
        'f1': [1.0000,1.0000,1.0000,1.0000,0.5714,0,0,0,0,0],
        'prec': [1.0000,1.0000,1.0000,1.0000,1.0000,0,0,0,0,0],
        'rec': [1.0000,1.0000,1.0000,1.0000,0.4000,0,0,0,0,0]
    },
    'C7': {
        'f1': [0.6087,0.6087,0.6364,0.5714,0.3333,0,0,0,0,0],
        'prec': [0.8750,0.8750,1.0000,1.0000,1.0000,0,0,0,0,0],
        'rec': [0.4667,0.4667,0.4667, 0.4000,0.2000,0,0,0,0,0]
    },
    'C9': {
        'f1': [0.7222,0.7222,0.7273,0.6400,0.3333,0,0,0,0,0],
        'prec': [0.6190,0.6190,0.6667,0.8000,1.0000,0,0,0,0,0],
        'rec': [0.8667,0.8667,0.8000,0.5333, 0.2000,0,0,0,0,0]
    },
    'E1': {
        'f1': [0.3750,0.3750,0.4167,0.3333,0.1250,0,0,0,0,0],
        'prec': [0.3529,0.3529,0.5556,1.0000,1.0000,0,0,0,0,0],
        'rec': [0.4000,0.4000,0.3333,0.2000,0,0,0,0,0,0]
    },
    'E3': {
        'f1': [0.6977,0.6977,0.8000,0.9655,0.8889,0.2353,0,0,0,0],
        'prec': [0.5357,0.5357, 0.7000,1.0000,1.0000,1.0000,0,0,0,0],
        'rec': [1.0000,1.0000,0.9333,0.9333,0.8000,0.1333,0,0,0,0]
    },
    'E5': {
        'f1': [0.3768,0.3768,0.4906,0.7273,0.5000,0,0,0,0,0],
        'prec': [0.2407,0.2407,0.3421,0.6667,1.0000,0,0,0,0,0],
        'rec': [0.8667,0.8667,0.8667,0.8000, 0.3333, 0,0,0,0,0]
    },
    'E7': {
        'f1': [0.2963,0.2963,0.4000,0.5882,0.6923,0,0,0,0,0],
        'prec': [0.1818,0.1818,0.2667,0.5263,0.8182,0,0,0,0,0],
        'rec': [0.8000,0.8000,0.8000,0.6667, 0.6000,0,0,0,0,0]
    },
    'E9': {
        'f1': [ 0.8000,0.8000,0.8667,0.8148,0.5714,0,0,0,0,0],
        'prec': [0.7000,0.7000,0.8667,0.9167,1.0000,0,0,0,0,0],
        'rec': [0.9333,0.9333,0.8667,0.7333,0.4000,0,0,0,0,0]
    }
}

points = [
    (20, 20), (60, 20), (100, 20), (140, 20), (180, 20),
    (20, 60), (60, 60), (100, 60), (140, 60), (180, 60),
    (20, 100), (60, 100), (100, 100), (140, 100), (180, 100)
]

labels = [
    "A1", "A3", "A5", "A7", "A9",
    "C1", "C3", "C5", "C7", "C9",
    "E1", "E3", "E5", "E7", "E9"
]

# Helper-Funktion zum Plotten und Speichern
import matplotlib.pyplot as plt

# Helper-Funktion zum Plotten und Speichern
def plot_and_save_with_legend(metric_name, values, color):
    plt.figure(figsize=(8, 6))
    for (x, y), val in zip(points, values):
        plt.scatter(x, y, c=color, s=100)
        plt.text(x + 2, y + 2, f"{val:.2f}", fontsize=9)
    plt.xlabel(r"$\mathit{x\text{-}Position\ in\ cm}$", fontsize=16)
    plt.ylabel(r"$\mathit{y\text{-}Position\ in\ cm}$", fontsize=16)
    plt.xticks(np.arange(0, 201, 20), fontsize=14)
    plt.yticks(np.arange(0, 121, 20), fontsize=14)
    plt.grid(True)
    # Dummy-Punkt für Legende
    plt.scatter([], [], c=color, s=100, label=metric_name)
    plt.legend(loc="upper right")
    plt.axis("equal")
    plt.savefig(f"{metric_name.lower()}_scatter.svg", format="svg")
    plt.close()

# Daten extrahieren
f1_scores = [data[label]['f1'][2] for label in labels]
precisions = [data[label]['prec'][2] for label in labels]
recalls = [data[label]['rec'][2] for label in labels]

# Neue Plots mit Legenden und gleich großen Punkten
plot_and_save_with_legend("F1-Score", f1_scores, 'blue')
plot_and_save_with_legend("Recall", recalls, 'green')
plot_and_save_with_legend("Precision", precisions, 'orange')

